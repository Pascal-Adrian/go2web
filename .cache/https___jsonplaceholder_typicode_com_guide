{"timestamp": 1747046973.170233, "status_code": "200", "headers": {"Status": "200 OK", "Date": "Mon, 12 May 2025 10:49:33 GMT", "Content-Type": "text/html; charset=UTF-8", "Transfer-Encoding": "chunked", "Connection": "close", "Server": "cloudflare", "Server-Timing": "cfCacheStatus;desc=\"HIT\"", "Cf-Ray": "93e9599e99f6e4af-OTP", "Report-To": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1747029542&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=gMyQsulR5SRaMLpqRx4aMvPzYNRKTgyrPGW0ENxgVzU%3D\"}]}", "Reporting-Endpoints": "heroku-nel=https://nel.heroku.com/reports?ts=1747029542&sid=e11707d5-02a7-43ef-b45e-2cf4d2036f7d&s=gMyQsulR5SRaMLpqRx4aMvPzYNRKTgyrPGW0ENxgVzU%3D", "Nel": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}", "X-Powered-By": "Express", "X-Ratelimit-Limit": "1000", "X-Ratelimit-Remaining": "999", "X-Ratelimit-Reset": "1747029579", "Vary": "Origin, Accept-Encoding", "Access-Control-Allow-Credentials": "true", "Cache-Control": "public, max-age=43200", "Last-Modified": "Mon, 12 May 2025 03:46:33 GMT", "Via": "1.1 vegur", "Cf-Cache-Status": "HIT", "Age": "17431", "alt-svc": "h3=\":443\"; ma=86400", "server-timing": "cfL4;desc=\"?proto=TCP&rtt=15897&min_rtt=15734&rtt_var=6227&sent=5&recv=6&lost=0&retrans=0&sent_bytes=2825&recv_bytes=890&delivery_rate=169943&cwnd=174&unsent_bytes=0&cid=f9e0840a4c0c958c&ts=88&x=0\""}, "body": "\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta\n      name=\"viewport\"\n      content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"\n    />\n    <link rel=\"stylesheet\" href=\"/style.css\" />\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/prism-themes/1.9.0/prism-lucario.min.css\"\n    />\n    <title>JSONPlaceholder - Guide</title>\n    <!-- Global site tag (gtag.js) - Google Analytics -->\n    <script\n      async\n      src=\"https://www.googletagmanager.com/gtag/js?id=G-E3C3GCQVBN\"\n    ></script>\n    <script>\n      window.dataLayer = window.dataLayer || []\n      function gtag() {\n        dataLayer.push(arguments)\n      }\n      gtag('js', new Date())\n\n      gtag('config', 'G-E3C3GCQVBN')\n    </script>\n    <script\n      async\n      src=\"https://media.ethicalads.io/media/client/ethicalads.min.js\"\n    ></script>\n  </head>\n\n  <body>\n    <!-- Banner -->\n    <div class=\"bg-blue-500 text-center py-2\">\n      <div class=\"container mx-auto\">\n        <a href=\"https://github.com/typicode/mistcss\" class=\"text-white\">Check my new project <strong>üíß MistCSS</strong> write React components with 50% less code</a>\n      </div>\n    </div>\n    <header\n      class=\"\n        container\n        mx-auto\n        max-w-4xl\n        flex flex-col\n        md:flex-row\n        justify-between\n        py-one\n        mb-three\n      \"\n    >\n      <h1>\n        <a href=\"/\" class=\"font-bold no-underline\">JSONPlaceholder</a>\n      </h1>\n      <nav>\n        <ul class=\"flex\">\n          <li><a href=\"/guide\" class=\"mr-4 no-underline\">Guide</a></li>\n          <li>\n            <a\n              href=\"https://github.com/sponsors/typicode\"\n              class=\"mr-4 no-underline\"\n              >Sponsor this project</a\n            >\n          </li>\n          <li>\n            <a href=\"https://blog.typicode.com\" class=\"mr-4 no-underline\"\n              >Blog</a\n            >\n          </li>\n          <li>\n            <a href=\"https://my-json-server.typicode.com\" class=\"no-underline\"\n              >My JSON Server</a\n            >\n          </li>\n        </ul>\n      </nav>\n    </header>\n\n    <div><main class=\"container mx-auto max-w-4xl\">\n<h2>Guide</h2>\n<p>Below you'll find examples using <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\">Fetch API</a> but you can JSONPlaceholder with any other language.</p>\n<p>You can copy paste the code in your browser console to quickly test JSONPlaceholder.</p>\n<div id=\"crbn\"></div>\n<h3>Getting a resource</h3>\n<pre><code class=\"language-js\">fetch('https://jsonplaceholder.typicode.com/posts/1')\n  .then((response) =&gt; response.json())\n  .then((json) =&gt; console.log(json));\n</code></pre>\n<p>üëá <em>Output</em></p>\n<pre><code class=\"language-js\">{\n  id: 1,\n  title: '...',\n  body: '...',\n  userId: 1\n}\n</code></pre>\n<h3>Listing all resources</h3>\n<pre><code class=\"language-js\">fetch('https://jsonplaceholder.typicode.com/posts')\n  .then((response) =&gt; response.json())\n  .then((json) =&gt; console.log(json));\n</code></pre>\n<p>üëá <em>Output</em></p>\n<pre><code class=\"language-js\">[\n  { id: 1, title: '...' /* ... */ },\n  { id: 2, title: '...' /* ... */ },\n  { id: 3, title: '...' /* ... */ },\n  /* ... */\n  { id: 100, title: '...' /* ... */ },\n];\n</code></pre>\n<h3>Creating a resource</h3>\n<pre><code class=\"language-js\">fetch('https://jsonplaceholder.typicode.com/posts', {\n  method: 'POST',\n  body: JSON.stringify({\n    title: 'foo',\n    body: 'bar',\n    userId: 1,\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n  .then((response) =&gt; response.json())\n  .then((json) =&gt; console.log(json));\n</code></pre>\n<p>üëá <em>Output</em></p>\n<pre><code class=\"language-js\">{\n  id: 101,\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n}\n</code></pre>\n<p><strong>Important</strong>: resource will not be really updated on the server but it will be faked as if.</p>\n<h3>Updating a resource</h3>\n<pre><code class=\"language-js\">fetch('https://jsonplaceholder.typicode.com/posts/1', {\n  method: 'PUT',\n  body: JSON.stringify({\n    id: 1,\n    title: 'foo',\n    body: 'bar',\n    userId: 1,\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n  .then((response) =&gt; response.json())\n  .then((json) =&gt; console.log(json));\n</code></pre>\n<p>üëá <em>Output</em></p>\n<pre><code class=\"language-js\">{\n  id: 1,\n  title: 'foo',\n  body: 'bar',\n  userId: 1\n}\n</code></pre>\n<p><strong>Important</strong>: resource will not be really updated on the server but it will be faked as if.</p>\n<h3>Patching a resource</h3>\n<pre><code class=\"language-js\">fetch('https://jsonplaceholder.typicode.com/posts/1', {\n  method: 'PATCH',\n  body: JSON.stringify({\n    title: 'foo',\n  }),\n  headers: {\n    'Content-type': 'application/json; charset=UTF-8',\n  },\n})\n  .then((response) =&gt; response.json())\n  .then((json) =&gt; console.log(json));\n</code></pre>\n<p>üëá <em>Output</em></p>\n<pre><code class=\"language-js\">{\n  id: 1,\n  title: 'foo',\n  body: '...',\n  userId: 1\n}\n</code></pre>\n<p><strong>Important</strong>: resource will not be really updated on the server but it will be faked as if.</p>\n<h3>Deleting a resource</h3>\n<pre><code class=\"language-js\">fetch('https://jsonplaceholder.typicode.com/posts/1', {\n  method: 'DELETE',\n});\n</code></pre>\n<p><strong>Important</strong>: resource will not be really updated on the server but it will be faked as if.</p>\n<h3>Filtering resources</h3>\n<p>Basic filtering is supported through query parameters.</p>\n<pre><code class=\"language-js\">// This will return all the posts that belong to the first user\nfetch('https://jsonplaceholder.typicode.com/posts?userId=1')\n  .then((response) =&gt; response.json())\n  .then((json) =&gt; console.log(json));\n</code></pre>\n<h3>Listing nested resources</h3>\n<p>One level of nested route is available.</p>\n<pre><code class=\"language-js\">// This is equivalent to /comments?postId=1\nfetch('https://jsonplaceholder.typicode.com/posts/1/comments')\n  .then((response) =&gt; response.json())\n  .then((json) =&gt; console.log(json));\n</code></pre>\n<p>The available nested routes are:</p>\n<ul>\n<li><a href=\"/posts/1/comments\">/posts/1/comments</a></li>\n<li><a href=\"/albums/1/photos\">/albums/1/photos</a></li>\n<li><a href=\"/users/1/albums\">/users/1/albums</a></li>\n<li><a href=\"/users/1/todos\">/users/1/todos</a></li>\n<li><a href=\"/users/1/posts\">/users/1/posts</a></li>\n</ul>\n</main>\n</div>\n\n    <!-- Footer -->\n    <footer class=\"container mx-auto max-w-4xl mt-four\">\n      <div class=\"mb-one\">\n        <a href=\"https://github.com/users/typicode/sponsorship\">\n          <strong>You can sponsor this project (and others) on GitHub</strong>\n        </a>\n      </div>\n      <div class=\"mb-one\">\n        Coded and maintained with ‚ù§Ô∏è by\n        <a href=\"https://github.com/typicode\">typicode</a> ¬© 2024\n      </div>\n    </footer>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js\"></script>\n  <script defer src=\"https://static.cloudflareinsights.com/beacon.min.js/vcd15cbe7772f49c399c6a5babf22c1241717689176015\" integrity=\"sha512-ZpsOmlRQV6y907TI0dKBHq9Md29nnaEIPlkf84rnaERnq6zvWvPUqr2ft8M1aS28oN72PdrCzSjY4U6VaAw1EQ==\" data-cf-beacon='{\"rayId\":\"93e9599e99f6e4af\",\"version\":\"2025.4.0-1-g37f21b1\",\"r\":1,\"serverTiming\":{\"name\":{\"cfExtPri\":true,\"cfL4\":true,\"cfSpeedBrain\":true,\"cfCacheStatus\":true}},\"token\":\"2f059cbf58a24e59854ee0884c97b166\",\"b\":1}' crossorigin=\"anonymous\"></script>\n</body>\n</html>\n\r\n0\r\n\r\n"}